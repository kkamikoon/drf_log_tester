version: '3.7'

services:

  # The 'setup' service runs a one-off script which initializes the
  # 'logstash_internal' and 'kibana_system' users inside Elasticsearch with the
  # values of the passwords defined in the '.env' file.
  #
  # This task is only performed during the *initial* startup of the stack. On all
  # subsequent runs, the service simply returns immediately, without performing
  # any modification to existing users.
  app:
    build:
      context: app/
    hostname: log_tester
    volumes:
      - ./app/logs/:/app/server/logs/
    ports:
      - '10000:8080'
    environment:
      DJANGO_SUPERUSER_USERNAME: "kkamikoon"
      DJANGO_SUPERUSER_PASSWORD: "kkamikoon"
      DJANGO_SUPERUSER_EMAIL: "rootsik1221@gmail.com"
    depends_on:
      - elasticsearch
    networks:
      default:
        ipv4_address: 88.88.88.2

  setup:
    build:
      context: elk/setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ./elk/setup:/state:Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      default:
        ipv4_address: 88.88.88.88

  elasticsearch:
    build:
      context: elk/elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - ./elk/elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: -Xmx256m -Xms256m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/7.17/bootstrap-checks.html
      discovery.type: single-node
    networks:
      default:
        ipv4_address: 88.88.88.4

  logstash:
    build:
      context: elk/logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: -Xmx256m -Xms256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      default:
        ipv4_address: 88.88.88.5
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: elk/kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      default:
        ipv4_address: 88.88.88.6
    depends_on:
      - elasticsearch

  filebeat:
    build:
      context: elk/extensions/filebeat/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    command: filebeat -e -strict.perms=false
    volumes:
      # Filebeat send to Logstash
      # - elk/extensions/filebeat/filebeat-logstash.yml:/usr/share/filebeat/filebeat.yml:ro
      # Filebeat send to Elasticsearh
      - /etc/localtime:/etc/localtime:ro
      - ./elk/extensions/filebeat/filebeat-elasticsearch.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./elk/extensions/filebeat/data:/usr/share/filebeat/data
      - ./elk/extensions/filebeat/logs:/usr/share/filebeat/logs
      - ./app/logs/:/usr/share/filebeat/logs/app/logs/
    networks:
      default:
        ipv4_address: 88.88.88.7

networks:
  default:
    external:
      name: log_tester

volumes:
  setup:
  elasticsearch:
